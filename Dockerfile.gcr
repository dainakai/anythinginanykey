# Stage 1: Builder
FROM node:20-slim AS builder

# Install openssl and ca-certificates needed for Prisma client generation with Supabase
RUN apt-get update && apt-get install -y openssl ca-certificates && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install production dependencies
# NODE_ENV=production is the default in node:20-slim, so no need to set it explicitly
RUN npm install --omit=dev --legacy-peer-deps

# Copy Prisma schema
COPY prisma ./prisma/

# Generate Prisma Client
# Make sure your schema.prisma uses env("DATABASE_URL")
RUN npx prisma generate

# Copy the rest of the application code
COPY . .

# Build the Next.js application
RUN npm run build

# Stage 2: Runner
FROM node:20-slim AS runner

WORKDIR /app

# Install openssl and ca-certificates for runtime database connection
RUN apt-get update && apt-get install -y openssl ca-certificates && rm -rf /var/lib/apt/lists/*

# Set NODE_ENV to production
ENV NODE_ENV=production

# Copy necessary files from builder stage
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/prisma ./prisma

# Expose port 8080 (default for Cloud Run)
EXPOSE 8080

# Set the PORT environment variable for the start script
ENV PORT=8080

# Prisma needs the DATABASE_URL at runtime, ensure it's set in Cloud Run environment
# CMD ["npx", "prisma", "migrate", "deploy", "&&", "npm", "start"]
CMD ["npm", "start"]
